AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate Service + Task Definition (manual ECR image, optional S3 env file, task role with Secrets Manager and S3 access)

Parameters:
  ClusterName:
    Type: String
    Description: Name of the ECS cluster
  ServiceName:
    Type: String
  ContainerName:
    Type: String
    Default: app
  ImageUri:
    Type: String
    Description: Full ECR image URI (e.g., 123456789012.dkr.ecr.ap-south-1.amazonaws.com/my-repo:latest)
  EnvFileS3Arn:
    Type: String
    Description: S3 ARN of the env file (e.g., arn:aws:s3:::bucket/envfile.env)
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  SecretArn:
    Type: String
    Description: ARN of the secret in Secrets Manager
  BucketName:
    Type: String
    Description: Name of the S3 bucket (e.g., my-app-bucket)

Resources:

  # ===== CloudWatch Log Group =====
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ServiceName}"
      RetentionInDays: 14

  # ===== ECS Task Execution Role =====
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}-ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
        - PolicyName: ECSExecutionAdditionalPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Ref EnvFileS3Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                Resource: "*"

  # ===== ECS Task Role (App Access Role) =====
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}-ecsTaskRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSAppTaskPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref SecretArn
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${BucketName}/*"

  # ===== ECS Task Definition =====
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ServiceName
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Ref ImageUri
          PortMappings:
            - ContainerPort: 80
          EnvironmentFiles:
            - Value: !Ref EnvFileS3Arn
              Type: s3
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # ===== ECS Service =====
  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ECSLogGroup
    Properties:
      Cluster: !Ref ClusterName
      ServiceName: !Ref ServiceName
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups:
            - !Ref SecurityGroupId

Outputs:
  TaskDefinitionArn:
    Description: "ECS Task Definition ARN"
    Value: !Ref ECSTaskDefinition
    Export:
      Name: !Sub "${AWS::StackName}-TaskDefinitionArn"

  ECSServiceName:
    Description: "ECS Service Name"
    Value: !Ref ECSService
    Export:
      Name: !Sub "${AWS::StackName}-ECSServiceName"
