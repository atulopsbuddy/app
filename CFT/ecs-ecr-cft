AWSTemplateFormatVersion: 2010-09-09
Description: "ECS Fargate Cluster with ECR Repository"

Parameters:
  ClusterName:
    Type: String
    Default: "procur-ecs-cluster"
    Description: "ECS Fargate Cluster name"

  EcrRepoName:
    Type: String
    Default: "procur-app-repo"
    Description: "Name of the ECR repository"

Resources:
  # ---------- ECS Cluster ----------
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT
      Tags:
        - Key: Environment
          Value: staging
        - Key: Owner
          Value: Procur
        - Key: Application
          Value: MyApp

  # ---------- ECR Repository ----------
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref EcrRepoName
      ImageScanningConfiguration:
        ScanOnPush: true    # ✅ corrected key case
      Tags:
        - Key: Environment
          Value: staging
        - Key: Owner
          Value: Procur
        - Key: Application
          Value: MyApp

Outputs:
  ECSClusterName:
    Description: "Name of the ECS Cluster"
    Value: !Ref ECSCluster
    Export:
      Name: !Sub "${AWS::StackName}-ECSClusterName"   # ✅ safer, unique per stack
   
  EcrRepoName:
    Description: "Name of the ECR Repository"
    Value: !Ref ECRRepository
    Export:
      Name: !Sub "${AWS::StackName}-EcrRepoName"      # ✅ safer, unique per stack

  ECRRepositoryUri:
    Description: "URI of the ECR Repository"
    Value: !GetAtt ECRRepository.RepositoryUri
    Export:
      Name: !Sub "${AWS::StackName}-ECRRepositoryUri" # ✅ safer, unique per stack
