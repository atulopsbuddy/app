AWSTemplateFormatVersion: 2010-09-09
Description: "VPC with 2 Public, 2 App, 2 DB Subnets, NAT, IGW, and S3 Endpoint"

Parameters:
  VpcOctets:
    Type: String
    Description: "First two octets of the VPC CIDR (e.g. 10.1)"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})"
    ConstraintDescription: "Must be in format x.x"

  NamePrefix:
    Type: String
    Description: "Prefix for naming resources (e.g. abc-stg-mb)"

  Env:
    Type: String
    Default: "staging"

  Application:
    Type: String
    Default: "myapp"

  Owner:
    Type: String
    Default: "procur-team"

  CostCenter:
    Type: String
    Default: "cc1234"

Mappings: {}

Resources:
  # ---------- VPC ----------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub "${VpcOctets}.0.0/16"
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-vpc"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  # ---------- Internet Gateway ----------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-igw"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # ---------- Public Subnets ----------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-pb-sb01"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.2.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-pb-sb02"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  # ---------- App Subnets ----------
  AppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.10.0/24"
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-app-sb01"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  AppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.11.0/24"
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-app-sb02"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  # ---------- DB Subnets ----------
  DbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.20.0/24"
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-db-sb01"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  DbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Sub "${VpcOctets}.21.0/24"
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-db-sb02"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  # ---------- NAT Gateway ----------
  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-eip-nat"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: AttachGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-natgw"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  # ---------- Route Tables ----------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-pb-rt"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  AppRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-app-rt"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  AppRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  AppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubnet1
      RouteTableId: !Ref AppRouteTable

  AppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubnet2
      RouteTableId: !Ref AppRouteTable

  DbRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-db-rt"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

  DbSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DbSubnet1
      RouteTableId: !Ref DbRouteTable

  DbSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DbSubnet2
      RouteTableId: !Ref DbRouteTable

  # ---------- S3 Endpoint ----------
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      RouteTableIds:
        - !Ref AppRouteTable
        - !Ref DbRouteTable
      VpcEndpointType: Gateway
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-s3-endpoint"
        - Key: env
          Value: !Ref Env
        - Key: application
          Value: !Ref Application
        - Key: owner
          Value: !Ref Owner
        - Key: costcenter
          Value: !Ref CostCenter

# ---------- Outputs ----------
Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"

  PublicSubnets:
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnets"

  AppSubnets:
    Value: !Join [",", [!Ref AppSubnet1, !Ref AppSubnet2]]
    Export:
      Name: !Sub "${AWS::StackName}-AppSubnets"

  DbSubnets:
    Value: !Join [",", [!Ref DbSubnet1, !Ref DbSubnet2]]
    Export:
      Name: !Sub "${AWS::StackName}-DbSubnets"
